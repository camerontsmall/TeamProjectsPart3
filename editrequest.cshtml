@using Models
@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Edit Request";
    Page.Path = "editrequest";
    Page.Parent = "Manage Requests";
    Page.ParentPath = "requests";
    var DB = Database.Open("dbConnectionString");
   
}
@if (Request.QueryString["delete"] != null) {
    //Delete request and all room requests
    string deleteId = Request.QueryString["delete"];

    string reqquery = "DELETE FROM request WHERE request_id=@0";
    string roomquery = "DELETE FROM request_room WHERE request_id=@0";

    try {
        DB.Execute(reqquery, deleteId);
        DB.Execute(roomquery, deleteId);

        Response.Redirect("~/requests?message=deleted&id=" + deleteId);
        Response.End();

    } catch (Exception e) {
        <div class="card-panel red">Error: @e.Message</div>
    }


}
@if (Request.QueryString["withdraw"] != null) {
    //Delete request and all room requests
    string wId = Request.QueryString["withdraw"];

    string wquery = "UPDATE request SET [status] = 'w' WHERE request_id = @0";

    try {
        DB.Execute(wquery, wId);

        Response.Redirect("~/requests?message=withdrawn&id=" + wId);
        Response.End();

    } catch (Exception e) {
        <div class="card-panel red">Error: @e.Message</div>
    }


}
@{ 
    var id = Request.QueryString["id"];
    if (id == null) {
        Response.Redirect("~/requests");
    }
}
@if (IsPost && Request.QueryString["addroom"] != null) {
    var newcapacity = Request.Form["capacity"];
    var newtype = Request.Form["roomtype"];
    var newpark = Request.Form["roompark"];
    var newroom = Request.Form["roompref"];
    var newfacility = Request.Form["facility"];
    var newspecial = Request.Form["special"];

    var query = "INSERT INTO request_room (room_code, capacity, type, park, facility, special, request_id) VALUES (@0, @1, @2, @3, @4, @5, @6)";
    try {
        DB.Execute(query, newroom, newcapacity, newtype, newpark, newfacility, newspecial, id);
        <div class="card-panel green white-text">Added room</div>
    } catch (Exception e) {
        <div class="card-panel red">Failed to edit request: @e.Message</div>
    }
} else if (IsPost) {
    var module_code = Request.Form["modulecode"];
    var day = Request.Form["day"];
    var period = Request.Form["period"];
    var week = Request.Form["weeks"];

    var query = "UPDATE request SET status='p', module_code=@0, day=@1, period=@2, week=@3 WHERE request_id=@4";
    try {
        DB.Execute(query, module_code, day, period, week, id);
        <div class="card-panel green white-text">Saved changes</div>
    } catch (Exception e) {
        <div class="card-panel red">Failed to edit request: @e.Message</div>
    }
}

@{

    var data = DB.QuerySingle("SELECT * FROM request WHERE request_id=@0", id);
    string status;
    try {
        //i love c# don't you?
        status = Bookings.Request.Statuses()[data["status"].ToString().ToLower()[0].ToString()];
    }catch(Exception e) {
        status = data["status"];
        <p>@e.Message;</p>
    }

}
@if (Request.QueryString["message"] == "deletedroom")
    {
<div class="card-panel green white-text">
    Room request deleted
</div>
    }



<h4>Edit Request @id</h4>
<div id="requestForm">
        <div class="row">
            <div class="col s12 m12 l6" id="form_left">
                <form method="post" action="./editrequest?id=@id">
                    <div for="titleinput">Module Code</div>
                    <select id="moduleinput" class="browser-default" name="modulecode">
                        @RequestForm.Modules(Department.User.departmentID(), data["module_code"])
                    </select>
                    <br />
                    <div for="dayinput">Day</div>
                    <select id="dayinput" class="browser-default" name="day">
                        @RequestForm.Days(data["day"])
                    </select>
                    <br />
                    <div for="periodinput">Period(s)</div>
                    <select multiple id="periodinput" class="browser-default" name="period">
                        @RequestForm.Periods(data["period"])
                    </select>
                    <br />
                    <div for="weeksinnput" class="active">Week(s)</div>
                    <select multiple id="weeksinput" class="browser-default" name="weeks">
                        @RequestForm.Weeks(data["week"])
                    </select>
                    <br />
                    <div class="row">
                        <div class="col s12">
                            <p>Status: @status</p><br/>
                        </div>
                        <div class="col s12">
                            <input class="btn waves-effect" type="submit" value="Save" />
                            <div onclick="withdrawRequest(@id);" class="btn waves-effect orange">Withdraw</div>
                            <div onclick="deleteRequest(@id);" class="btn waves-effect red">Delete</div>
                        </div>
                    </div>
                </form>
          
                <form method="post" action="?addroom=@id&id=@id">
                        <p for="capacityinput">Capacity required</p>
                        <input id="capacityinput" type="number" name="capacity" value="50" min="0" max="400" />
                        <br />
                        <p for="roomtypeinput">Preferred room type</p>
                        <select id="roomtypeinput" class="browser-default" name="roomtype">
                            @RequestForm.RoomTypes()
                        </select>
                        <br />
                        <p for="parkinput">Preferred park</p>
                        <select id="parkinput" name="roompark" class="browser-default">
                            @RequestForm.Parks()
                        </select>
                        <br />
                        <div onclick="loadRooms('@Department.User.departmentID()')" class="btn waves-effect">Update Room Suggestions</div>
                        <br />
                        <p for="roominput">Preferred room</p>
                        <!-- <input list="roomlist" name="roompref" id="roominput" class="active"/> -->
                        <select id="roomlist" class="browser-default" name="roompref" onchange="loadRoomInfo()">
                            @RequestForm.Rooms("", Department.User.departmentID())
                        </select>
                        <br/>
                        <div class="card-panel blue white-text" id="roominfo">No room selected</div>
                    
                        <p>Required Facilities</p>
                        <div class="row">
                            @RequestForm.RoomFacilities()
                        </div>
                        <br />
                        <div for="specialinput">Special requirements</div>
                        <textarea id="specialinput" name="special" class="materialize-textarea" length="200"></textarea>
                        <input type="text" disabled name="owner" style="display:none;" value="@WebSecurity.CurrentUserId" />
                    <input type="submit" class="btn waves-effect green" value="Add Room" />
                </form>
            </div>
            <div class="col s12 m12 l6" id="form-right">
                @{ 
                    var room_data = DB.Query("SELECT * FROM request_room WHERE request_id = @0", Request.QueryString["id"]);

                    List<Dictionary<string, string>> items = new List<Dictionary<string, string>>();

                    foreach (dynamic r in room_data) {
                        items.Add(Models.RoomRequest.ToNiceList(r));
                    }

                    var JSON = Json.Encode(items);

                }
                @JsonList.PrintList("roomlist", JSON, "Room Requests")
            </div>
        </div>
</div>
