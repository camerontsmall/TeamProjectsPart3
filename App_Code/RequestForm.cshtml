@using Facilities
@using Department
@using Bookings
@using System.Linq

@helper Periods(string periodval = ""){
string[] periods = periodval.Split(',');
foreach(var period in Bookings.Period.All()){
    string num = period.Key.ToString();
    string val = period.Value;

    string selected = ((Array.IndexOf(periods,num)) > -1) ? "selected" : "";
        <option @selected value="@num">@num - @val</option>
    }

}

@helper Days(int val = 1) {
foreach (var day in Life.Calendar.Days()) {
    var num = day.Key;
    var name = day.Value;
    string selected = (num == val) ? "selected" : "";
        <option @selected value="@num">@name</option>
    }

}

@helper Weeks(string weekstr = "1,2,3,4,5,6,7,8,9,10,11,12"){
    string[] weeks = weekstr.Split(',');
for (int i=1; i <= 12; i++){
        var istr = i.ToString();
    string selected = ((Array.IndexOf(weeks, istr)) > -1) ? "selected" : "";
        <option @selected value="@i">Week @i</option>
    }
}

@helper RoomTypes(string value = ""){
foreach(var type in Facilities.Room.Types()){
    string code = @type.Key;
    string nice = @type.Value;

    string selected = (value == code) ? "selected" : "";
        <option @selected value="@code">@nice</option>
    }
}

@helper Parks(char value = ' '){
    foreach(var park in Facilities.Park.Parks()){
        char code = @park.Key;
        string nice = @park.Value;
        string selected = (value == code) ? "selected" : "";
        <option @selected value="@code">@nice</option>
    }
}

@helper Parts() {
    <option value="">Any</option>
    <option value="A">A</option>
    <option value="B">B</option>
    <option value="C">C</option>
    <option value="D">D</option>
    <option value="F">F</option>
    <option value="I">I</option>
    <option value="P">P</option>
    <option value="Z">Z</option>

}

@helper Modules(string dept_id = "CO", string value = "") {
    <option value="">--</option>
foreach (var module in Bookings.Module.AllCodes(dept_id))
{
    string code = @module.Key;
    string nice = @module.Value;
    string selected = (value == code) ? "selected" : "";
            <option @selected value="@code">@code - @nice</option>
    }
}

@helper Rooms(string value = "", string dept_id = "") { 
        <option value="">No preference</option>
foreach (var code in Facilities.Room.Codes(dept_id)) {

                string selected = (value == code) ? "selected" : "";
               <option @selected value="@code">@code</option>
        }
    }

@helper Lecturer(string dept_id) { 
    <option value="">--</option>
var lecturers = Department.Lecturer.lecturerByDept(dept_id);
foreach (dynamic lect in lecturers) {
    int id = lect["lecturer_id"];
    string fullname = lect["full_name"];
    string username = lect["username"];
        <option value="@id">@fullname (@username)</option>
    }
}

@helper RoomFacilities(string facilities = "") { 
    <!-- @facilities -->
string[] facarray = new string[0];
try {
    facarray = facilities.Split(',');
} catch(Exception e) {
    <!-- @e.Message -->
}
foreach(dynamic fac in Facilities.FacilityTypes.PossibleFacilities()) {
    string id = fac.Key.ToString();
    string code_id = "facility_" + id;
    string name = fac.Value;
    string selected = ((Array.IndexOf(facarray, id)) > -1) ? "checked" : "";
        <div class="col s6">
            <input @selected type="checkbox" name="facility" value="@id" id="@code_id" />
            <label for="@code_id">@name</label>
        </div>
    }
}